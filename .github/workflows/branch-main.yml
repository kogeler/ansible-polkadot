name: main branch

on:
  push:
    branches:
      - add-cd

jobs:
  run-molecule-tests:
    strategy:
      fail-fast: false
      matrix:
        role-names: [node, ws_health_exporter]
        molecule-drivers: [docker, lxd]
        # We test the latest version and minimum supported version
        ansible-versions: [5.0.1, 8.4.0]
    uses: ./.github/workflows/reusable-molecule.yml
    with:
      role-name: ${{ matrix.role-names }}
      molecule-driver: ${{ matrix.molecule-drivers }}
      ansible-version: ${{ matrix.ansible-versions }}
  check-version:
    uses: ./.github/workflows/reusable-check-version.yml
    with:
      compare-versions: false
#  create-git-tag:
#    runs-on: ubuntu-22.04
#    needs: [run-molecule-tests, check-version]
#    env:
#      CURRENT_GALAXY_VERSION: ${{ needs.check-version.outputs.current-galaxy-version }}
#    steps:
#      - name: Print tag version
#        run: |
#          echo "Tag version: ${CURRENT_GALAXY_VERSION}"
#      - name: Create Tag
#        uses: actions/github-script@v6
#        with:
#          script: |
#            const {CURRENT_GALAXY_VERSION} = process.env
#            github.rest.git.createRef({
#                owner: context.repo.owner,
#                repo: context.repo.repo,
#                ref: `refs/tags/${CURRENT_GALAXY_VERSION}`,
#                sha: context.sha
#            })
  galaxy-deploy:
#    needs: [create-git-tag]
    uses: ./.github/workflows/reusable-galaxy-deploy.yml
    with:
      api-token: "${{ secrets.GALAXY_API_KEY }}"
#  deploy-galaxy:
#    runs-on: ubuntu-22.04
#    environment: production
#    needs: [create-git-tag]
#    steps:
#      - name: test secret
#        run: echo "${{ secrets.GALAXY_API_KEY }}"
#      - name: Checkout
#        uses: actions/checkout@v4
#        with:
#          path: "${{ github.repository }}"
#      - name: Build and Deploy Collection
#        uses: artis3n/ansible_galaxy_collection@v2
#        with:
#          api_key: "${{ secrets.GALAXY_API_KEY }}"
#          collection_dir: "${{ github.repository }}"